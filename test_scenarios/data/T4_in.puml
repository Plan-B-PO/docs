@startuml

object "testApp01 : ComputationApplication" as testApp01 {
    id = <any>
    name = "Test App 01"
    description = "Fibonacci element"
    icon = "https://static.thenounproject.com/png/1751844-200.png"
}

object ": ComputationStepPackage" as pack {
    applicationId = <any>
    computationSteps = [step1]
    version: v1.0.0
}

testApp01 <.. pack

object "step1 : ComputationStep" as step1 {
    params = []
    artifactUrl = <<app counting phi(n)>>
    - command
}

pack *-- step1

object "testTask01 : ComputationTask" as testTask01 {
    id = <any>
    name = "Test Task 01"
    userId = 00001
    application = testApp01
    input = input01
}

object "input01 : ComputationInput" as input01 {
    logger = null
    n = 20
}

testApp01 --o testTask01
testTask01 o-- input01

object "testApp02 : ComputationApplication" as testApp02 {
    id = <any>
    name = "Test App 02"
    description = "Fibonnacci sum"
    icon = "https://static.thenounproject.com/png/1751844-200.png"
}

object ": ComputationStepPackage" as pack2 {
    applicationId = <any>
    computationSteps = [step21, step22]
    version: v1.0.0
}

testApp02 <.. pack2

object "step21 : ComputationStep" as step21 {
    params = []
    artifactUrl = <<app counting phi sequence from 1 to n and saving it to file>>
    - command
}

object "step22 : ComputationStep" as step22 {
    params = []
    artifactUrl = <<app counting sum of the series saved in a file>>
    - command
}

pack2 *-- step21
pack2 *-- step22

object "testTask02 : ComputationTask" as testTask02 {
    id = <any>
    name = "Test Task 02"
    userId = 00001
    application = testApp02
    input = input02
}

object "input02 : ComputationInput" as input02 {
    logger = null
    n = 20
}

testApp02 --o testTask02
testTask02 o-- input02


@enduml