openapi: 3.0.0

info:
  description: This is a simple API
  version: "iter_1a"
  title: Baltic API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
- name: launcher
  description: Launching applications
- name: library
  description: Keeping track of all applications
- name: machine manager
  description: Managing all clients
- name: machine
  description: Our client on machine
- name: logger
  description: Logger
- name: queue
  description: Queue
- name: auth
  description: OAuth server

paths:

  /launcher/app-user/applications:
    get:
      tags:
      - launcher
      summary: searches apps in library
      operationId: listUserApplications
      responses:
        '200':
          description: applications array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputationApplication'
  /launcher/app-user/computations:
    get:
      tags:
      - launcher
      summary: gets all computations
      operationId: listComputations
      responses:
        '200':
          description: applications array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputationTask'
    post:
      tags:
      - launcher
      summary: run application
      operationId: run application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputationTask'
      responses:
        '200':
          description: Application ran successfully
  /launcher/app-user/computations/{id}:
    delete:
      tags: 
      - launcher
      summary: stopComputation
      operationId: stopComputatuin
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '200':
          description: computation stopped
  /launcher/app-user/application:
    get:
      tags:
      - launcher
      summary: Get applications in cockpit
      responses:
        '200':
          description: Applications list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputationApplication'
    post:
      tags:
      - launcher
      summary: Add application to cockpit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '201':
          description: Application added
  /launcher/app-user/application/{id}:
    delete:
        tags:
        - launcher
        summary: Remove application from cockpit
        operationId: removeApplicationFromCockpit
        parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        responses:
          '200':
            description: Application removed
  /launcher/app-user/rack:
    get:
      tags:
      - launcher
      summary: Get Computation Rack
      operationId: getComputationRack
      responses:
        '200':
          description: Applications list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputationTask'
    post:
      tags:
      - launcher
      summary: Add to Computation Rack
      operationId: addToComputationRack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputationTask'
      responses:
        '200':
          description: CT successfully added
  /launcher/app-user/rack/{id}:
    get:
        tags:
        - launcher
        summary: Show CT details
        operationId: showTaskDetails
        parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        responses:
          '200':
            description: Task details
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/ComputationTask'
    delete:
        tags:
        - launcher
        summary: Remove CT from Computation Rack
        operationId: removeTaskFromComputationRack
        parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        responses:
          '200':
            description: Task removed
  /library/launcher/applications:
    get:
      tags:
      - library
      summary: get all applications
      operationId: listApplications
      responses:
        '200':
          description: get all applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputationApplication'
  /library/launcher/applications/{id}:
    get:
      tags:
      - library
      summary: get application
      operationId: getApplication
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '200':
          description: application with id
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ComputationApplication'
  /machine-manager/launcher/computations:
    post:
      tags:
      - machine manager
      summary: run computation on machine
      operationId: runComputation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputationStepPackage'
      responses:
        '201':
          headers:
            location:
              schema:
                type: string
                example: /machine-manager/launcher/computations/12333
                description: url of created computation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Computation'
          description: application ran successfully
        '400':
          description: no machine is available
  /machine-manager/launcher/computations/{id}:
    delete:
      tags:
      - machine manager
      summary: cancel computation
      operationId: cancelComputation
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '200':
          description: computation canceled

  /machine-manager/management/machines:
    get:
      tags:
      - machine manager
      summary: get registered machines
      operationId: getMachines
      security:
      - OAuth2: [supplier]
      responses:
        '200':
          description: list of machines managed by user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Machine'
    post:
      tags:
      - machine manager
      summary: create machine
      operationId: createMachine
      security:
      - OAuth2: [supplier]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Machine token
      responses:
        '201':
          description: machine created successfully
        '400':
          description: validation error

  /machine-manager/management/machines/{id}:
    get:
      tags:
      - machine manager
      summary: get machine
      operationId: getMachine
      security:
      - OAuth2: [supplier]
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '200':
          description: machine
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
        '404':
          description: no such machine
    delete:
      tags:
      - machine manager
      summary: delete machine
      operationId: deleteMachine
      security:
      - OAuth2: [supplier]
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '200':
          description: machine deleted
        '400':
          description: validation error

  /machine-manager/machines:
    post:
      tags:
      - machine manager
      summary: initial machine register
      operationId: registerMachine
      security:
      - MachineAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineMetrics'
      responses:
        '201':
          description: machine register successfull
          content:
            text/plain:
              schema:
                type: string
                example: 152623621625326

  /machine-manager/machines/status/{id}:
    post:
      tags:
      - machine manager
      summary: report machine metrics
      operationId: bumpMachine
      security:
      - MachineAuth: []
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineMetrics'
      responses:
        '200':
          description: metrics reported successfully
          
  /machine-manager/requests:
    get:
      tags:
      - machine manager
      summary: get all requests
      operationId: getRequests
      responses:
        '200':
          description: list of requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierRequest'
  /machine-manager/requests/{id}:
    post:
      tags:
      - machine manager
      summary: resolve request
      operationId: resolveRequest
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveRequest'
      responses:
        '200':
          description: Request resolved
    

  /machine/status:
    get:
      tags:
      - machine
      summary: get machine health
      operationId: healthCheck
      responses:
        '200':
          description: everything is OK
          content:
            text/plain:
              schema:
                type: string
                enum: [waiting, working]

  /machine/computation:
    post:
      tags:
      - machine
      summary: run computation on machine
      operationId: runMachineComputation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputationRunnable'
      responses:
        '201':
          description: application ran successfully

  /machine/computation/{id}:
    get:
      tags:
      - machine
      summary: get current computation status
      operationId: getComputation
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '200':
          description: current computation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Computation'
        '404':
          description: no computation
    delete:
      tags:
      - machine
      summary: cancel current computation
      operationId: cancelMachineComputation
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '200':
          description: computation canceled

  /logger/machine/computation/{id}/logs:
    post:
      tags:
      - logger
      operationId: log
      security:
      - MachineAuth: []
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      responses:
        '201':
          description: Logged successfully

  /logger/launcher/computation/{id}/logs:
    get:
      tags:
      - logger
      operationId: getLogs
      security:
      - OAuth2: [appuser]
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: from
        schema:
          type: string
      - in: query
        name: to
        schema:
          type: string
      - in: query
        name: filter
        schema:
          type: string
      responses:
        '200':
          description: Logs array


  /queue/topics:
    post:
      tags:
      - queue
      operationId: createTopic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputationTopic'
      responses:
        '201':
          description: Topic created successfully

  /queue/topics/{computation}/{step}:
    get:
      tags:
      - queue
      operationId: consume
      security:
      - MachineAuth: []
      parameters:
      - in: path
        name: computation
        schema:
          type: string
        required: true
      - in: path
        name: step
        schema:
          type: string
        required: true
      responses:
        '200':
          description: Message
        '404':
          description: No messages
    post:
      tags:
      - queue
      operationId: produce
      security:
      - MachineAuth: []
      parameters:
      - in: path
        name: computation
        schema:
          type: string
        required: true
      - in: path
        name: step
        schema:
          type: string
        required: true
      responses:
        '201':
          description: Created message

servers:
  - url: 'https://virtserver.swaggerhub.com/Velox-Digitis/baltic/1.0.0'
components:

  securitySchemes:
    MachineAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://baltic.lsc/oauth/authorize
          tokenUrl: https://baltic.lsc/oauth/token
          scopes:
            appuser: App user
            supplier: Supplier
            admin: Grants access to admin operations

  schemas:
    ComputationTask:
      type: object
      required:
        - id
        - name
        - userId
        - application
      properties:
        id:
          type: string
          example: 3214
        userId:
          type: string
          example: 23425
        name:
          type: string
          example: My computation
        application:
          $ref: '#/components/schemas/ComputationApplication'
        input:
          $ref: '#/components/schemas/ComputationInput'
    ComputationApplication:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
          example: 3142
        name:
          type: string
          example: SuperApp
        description:
          type: string
          example: This app allows multiplying large matrices
        icon:
          type: string
          example: https://imgur.com/exapmle
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ComputationStepParam'
    ComputationInput:
      type: object
      properties:
        properties:
          type: object
        logger:
          type: string
          example: http://mylogger.com/log
    ComputationStepPackage:
      required:
      - computationSteps
      - applicationId
      properties:
        applicationId:
          type: string
          example: 2135144
        computationSteps:
          type: array
          items:
            $ref: '#/components/schemas/ComputationStep'
        version:
          type: string
          example: 1.2.3-beta.4
    ComputationStep:
      required:
        - applicationId
        - command
      properties:
        params:
          type: array
          items:
            $ref: '#/components/schemas/ComputationStepParam'
        artifactUrl:
          type: string
          example: https://ext-repo.com/applications/sample-app.zip
        command:
          type: string
          example: ./run.sh
    ComputationStepParam:
      type: object
      required:
      - name
      - type
      properties:
        name:
          type: string
          example: name
        type:
          type: string
          example: string
        defaultValue:
          nullable: true
          example: null
          description: default value when running app
    ComputationRunnable:
      type: object
      required:
        - id
        - computationStep
      properties:
        id:
          type: string
          example: 24352
        computationStep:
          $ref: '#/components/schemas/ComputationStep'
        topic:
          $ref: '#/components/schemas/ComputationTopic'
        previousTopic:
          $ref: '#/components/schemas/ComputationTopic'
    Computation:
      type: object
      required:
      - id
      - runnable
      - input
      properties:
        id:
          type: string
          example: 9f0658ce-ea44-11e9-81b4-2a2ae2dbcce4
        appUserId:
          type: string
          example: 234565432
        runnable:
          $ref: '#/components/schemas/ComputationStepPackage'
        input:
          $ref: '#/components/schemas/ComputationInput'
    Machine:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          example: 13234
        name:
          type: string
          example: testMachine
        supplierId: 
          type: string
          example: 12345643
        metrics:
          $ref: '#/components/schemas/MachineMetrics'
    MachineMetrics:
      type: object
      properties:
        cpus:
          type: array
          items:
            $ref: '#/components/schemas/MachineMetricValue'
        gpus:
          type: array
          items:
            $ref: '#/components/schemas/MachineMetricValue'
        memory:
          $ref: '#/components/schemas/MachineMetricValue'
        localStorage:
          $ref: '#/components/schemas/MachineMetricValue'
    MachineMetricValue:
      type: object
      required:
        - max
      properties:
        current:
          type: integer
          example:  0
        max:
          type: integer
          example: 100
    ComputationTopic:
      type: object
      required:
      - computation
      - step
      properties:
        computation:
          type: string
          example: computation1
        step:
          type: string
          example: step1
    ApplicationRequest:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          example: 3142
    SupplierRequest:
      type: object
      required:
      - id
      - supplierId
      - machine
      properties:
        id:
          type: string
          example: 3142
        supplierId:
          type: string
          example: bob
        machine:
          $ref: '#/components/schemas/Machine'
    ResolveRequest:
      type: object
      required:
      - decision
      properties:
        decision:
          type: string
          enum: [approve, delete]
        comment:
          type: string
