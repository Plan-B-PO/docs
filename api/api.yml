openapi: 3.0.0

info:
  description: This is a simple API
  version: "iter_1"
  title: Baltic API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: machine manager
    description: Managing all clients
  - name: machine
    description: Our client on machine
  - name: logger
    description: Logger
  - name: auth
    description: OAuth server

paths:

  /machine-manager/launcher/computations:
    post:
      tags:
        - machine manager
      summary: run computation on machine
      operationId: runComputation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Runnable'
      responses:
        '200':
          description: application ran successfully
        '400':
          description: no machine is available
    delete:
      tags:
        - machine manager
      summary: cancel current computation
      operationId: cancelComputation
      responses:
        '200':
          description: computation canceled

  /machine-manager/management/machines:
    get:
      tags:
        - machine manager
      summary: get registered machines
      operationId: getMachines
      security:
        - OAuth2: [supplier]
      responses:
        '200':
          description: list of machines managed by user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Machine'
    post:
      tags:
        - machine manager
      summary: create machine
      operationId: createMachine
      security:
        - OAuth2: [supplier]
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Machine token
      responses:
        '201':
          description: machine created successfully
        '400':
          description: validation error

  /machine-manager/management/machines/{id}:
    get:
      tags:
        - machine manager
      summary: get machine
      operationId: getMachine
      security:
        - OAuth2: [supplier]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: machine
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Machine'
        '404':
          description: no such machine
    delete:
      tags:
        - machine manager
      summary: delete machine
      operationId: deleteMachine
      security:
        - OAuth2: [supplier]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: machine deleted
        '400':
          description: validation error   

  /machine-manager/machines/status/{id}:
    post:
      tags:
        - machine manager
      summary: report machine metrics
      operationId: bumpMachine
      security:
        - MachineAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineMetrics'
      responses:
        '200':
          description: metrics reported successfully

  /machine/status:
    get:
      tags:
        - machine
      summary: get machine health
      operationId: healthCheck
      responses:
        '200':
          description: everything is OK
          content:
            text/plain:
              schema:
                  type: string
                  enum: [waiting, working]

  /machine/computation:
    get:
      tags:
        - machine
      summary: get current computation status
      operationId: getComputation
      responses:
        '200':
          description: current computation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Computation'
        '404':
          description: no computation
    post:
      tags:
        - machine
      summary: run computation on machine
      operationId: runMachineComputation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Runnable'
      responses:
        '201':
          description: application ran successfully
    delete:
      tags:
        - machine
      summary: cancel current computation
      operationId: cancelMachineComputation
      responses:
        '200':
          description: computation canceled

  /logger/machine/computation/{id}/logs:
    post:
      tags: 
        - logger
      operationId: log
      security:
        - MachineAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Logged successfully
          
  /logger/launcher/computation/{id}/logs:
    get:
      tags: 
        - logger
      operationId: getLogs
      security:
        - OAuth2: [appuser]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: from
          schema:
            type: string
        - in: query
          name: to
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      responses:
        '200':
          description: Logs array

servers:
  - url: 'https://virtserver.swaggerhub.com/Velox-Digitis/baltic/1.0.0'
components:

  securitySchemes:
    MachineAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://baltic.lsc/oauth/authorize
          tokenUrl: https://baltic.lsc/oauth/token
          scopes:
            appuser: App user
            supplier: Supplier
            admin: Grants access to admin operations

  schemas:
    ComputationApplication:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
          example: 3142
        name:
          type: string
          example: SuperApp
        description:
          type: string
          example: This app allows multiplying large matrices
        icon:
          type: string
          example: https://imgur.com/exapmle
    ComputationApplicationInput:
      type: object
      properties:
        properties:
          type: object
        logger:
          type: string
          example: http://mylogger.com/log
    Runnable:
      required:
      - application
      - url
      - schema
      properties:
        application:
          $ref: '#/components/schemas/ComputationApplication'
        version:
          type: string
          example: 1.2.3-beta.4
        url:
          type: string
          example: library/applications/sample-app.zip
        schema:
          type: array
          items:
            $ref: '#/components/schemas/RunnableField'
        command:
          type: string
          example: ./run.sh
    RunnableField:
      type: object
      required:
      - name
      - type
      properties:
        name:
          type: string
          example: name
        type:
          type: string
          example: string
        defaultValue:
          nullable: true
          example: null
          description: default value when running app
    Computation:
      type: object
      required:
      - id
      - runnable
      - logger
      - input
      properties:
        id:
          type: string
          example: 9f0658ce-ea44-11e9-81b4-2a2ae2dbcce4
        appUserId:
          type: string
          example: 234565432
        runnable:
          $ref: '#/components/schemas/Runnable'
        logger:
          type: string
          example: https://my-domain.pl/log
        input:
          $ref: '#/components/schemas/ComputationApplicationInput'
    Machine:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          example: 13234
        supplierId: 
          type: string
          example: 12345643
        metrics:
          $ref: '#/components/schemas/MachineMetrics'
    MachineMetrics:
      type: object
      properties:
        cpus:
          type: array
          items:
            $ref: '#/components/schemas/MachineMetricValue'
        gpus:
          type: array
          items:
            $ref: '#/components/schemas/MachineMetricValue'
        memory:
          $ref: '#/components/schemas/MachineMetricValue'
        localStorage:
          $ref: '#/components/schemas/MachineMetricValue'
    MachineMetricValue:
      type: object
      required:
        - max
      properties:
        current:
          type: integer
          example:  0
        max:
          type: integer
          example: 100
